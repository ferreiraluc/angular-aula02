{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nexport class LoginComponent {\n  constructor() {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      senha: new FormControl('', Validators.required)\n    });\n  }\n  onSubmit() {\n    if (this.loginForm.valid) {\n      const email = this.loginForm.value.email;\n      const senha = this.loginForm.value.senha;\n      // Simulação: Login bem-sucedido se o email for \"teste@teste.com\" e senha for \"senha123\"\n      if (email === 'teste@teste.com' && senha === 'senha123') {\n        alert('Login bem-sucedido!');\n        // Você poderia definir um token ou algo similar aqui\n      } else {\n        alert('Credenciais inválidas!');\n      }\n    }\n  }\n}","map":{"version":3,"names":["FormGroup","FormControl","Validators","LoginComponent","constructor","loginForm","email","required","senha","onSubmit","valid","value","alert"],"sources":["C:\\Users\\lucas\\angular-aula02\\src\\app\\sistema\\login\\login.component.ts"],"sourcesContent":["import { FormGroup, FormControl, Validators } from '@angular/forms';\n\nexport class LoginComponent {\n    loginForm = new FormGroup({\n        email: new FormControl('', [Validators.required, Validators.email]),\n        senha: new FormControl('', Validators.required)\n    });\n\n    onSubmit() {\n      if (this.loginForm.valid) {\n          const email = this.loginForm.value.email;\n          const senha = this.loginForm.value.senha;\n  \n          // Simulação: Login bem-sucedido se o email for \"teste@teste.com\" e senha for \"senha123\"\n          if (email === 'teste@teste.com' && senha === 'senha123') {\n              alert('Login bem-sucedido!');\n              // Você poderia definir um token ou algo similar aqui\n          } else {\n              alert('Credenciais inválidas!');\n          }\n      }\n  }\n}\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;AAEnE,OAAM,MAAOC,cAAc;EAA3BC,YAAA;IACI,KAAAC,SAAS,GAAG,IAAIL,SAAS,CAAC;MACtBM,KAAK,EAAE,IAAIL,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACK,QAAQ,EAAEL,UAAU,CAACI,KAAK,CAAC,CAAC;MACnEE,KAAK,EAAE,IAAIP,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACK,QAAQ;KACjD,CAAC;EAgBN;EAdIE,QAAQA,CAAA;IACN,IAAI,IAAI,CAACJ,SAAS,CAACK,KAAK,EAAE;MACtB,MAAMJ,KAAK,GAAG,IAAI,CAACD,SAAS,CAACM,KAAK,CAACL,KAAK;MACxC,MAAME,KAAK,GAAG,IAAI,CAACH,SAAS,CAACM,KAAK,CAACH,KAAK;MAExC;MACA,IAAIF,KAAK,KAAK,iBAAiB,IAAIE,KAAK,KAAK,UAAU,EAAE;QACrDI,KAAK,CAAC,qBAAqB,CAAC;QAC5B;OACH,MAAM;QACHA,KAAK,CAAC,wBAAwB,CAAC;;;EAG3C"},"metadata":{},"sourceType":"module","externalDependencies":[]}