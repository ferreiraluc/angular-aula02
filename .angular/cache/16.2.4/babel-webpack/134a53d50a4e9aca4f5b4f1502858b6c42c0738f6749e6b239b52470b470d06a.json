{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nexport class LoginComponent {\n  constructor() {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      senha: new FormControl('', Validators.required)\n    });\n  }\n  onSubmit() {\n    if (this.loginForm.valid) {\n      const email = this.loginForm.value.email;\n      const senha = this.loginForm.value.senha;\n    }\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 11,\n    vars: 1,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"type\", \"password\", \"formControlName\", \"senha\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\");\n        i0.ɵɵtext(3, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\");\n        i0.ɵɵtext(7, \"Senha:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 4);\n        i0.ɵɵtext(10, \"Login\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormGroup","FormControl","Validators","LoginComponent","constructor","loginForm","email","required","senha","onSubmit","valid","value","_","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵlistener","LoginComponent_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty"],"sources":["C:\\Users\\lucas\\angular-aula02\\src\\app\\sistema\\login\\login.component.ts","C:\\Users\\lucas\\angular-aula02\\src\\app\\sistema\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.scss']\r\n  })\r\n\r\nexport class LoginComponent {\r\n    loginForm = new FormGroup({\r\n        email: new FormControl('', [Validators.required, Validators.email]),\r\n        senha: new FormControl('', Validators.required)\r\n    });\r\n\r\n    onSubmit() {\r\n        if (this.loginForm.valid) {\r\n            const email = this.loginForm.value.email;\r\n            const senha = this.loginForm.value.senha;\r\n        }\r\n    }\r\n}","<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n        <label>Email:</label>\n        <input type=\"email\" formControlName=\"email\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n        <label>Senha:</label>\n        <input type=\"password\" formControlName=\"senha\" class=\"form-control\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Login</button>\n</form>\n"],"mappings":"AACA,SAASA,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;;AASnE,OAAM,MAAOC,cAAc;EAN3BC,YAAA;IAOI,KAAAC,SAAS,GAAG,IAAIL,SAAS,CAAC;MACtBM,KAAK,EAAE,IAAIL,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACK,QAAQ,EAAEL,UAAU,CAACI,KAAK,CAAC,CAAC;MACnEE,KAAK,EAAE,IAAIP,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACK,QAAQ;KACjD,CAAC;;EAEFE,QAAQA,CAAA;IACJ,IAAI,IAAI,CAACJ,SAAS,CAACK,KAAK,EAAE;MACtB,MAAMJ,KAAK,GAAG,IAAI,CAACD,SAAS,CAACM,KAAK,CAACL,KAAK;MACxC,MAAME,KAAK,GAAG,IAAI,CAACH,SAAS,CAACM,KAAK,CAACH,KAAK;;EAEhD;EAAC,QAAAI,CAAA,G;qBAXQT,cAAc;EAAA;EAAA,QAAAU,EAAA,G;UAAdV,cAAc;IAAAW,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV3BE,EAAA,CAAAC,cAAA,cAAsD;QAAxBD,EAAA,CAAAE,UAAA,sBAAAC,iDAAA;UAAA,OAAYJ,GAAA,CAAAZ,QAAA,EAAU;QAAA,EAAC;QACjDa,EAAA,CAAAC,cAAA,aAAwB;QACbD,EAAA,CAAAI,MAAA,aAAM;QAAAJ,EAAA,CAAAK,YAAA,EAAQ;QACrBL,EAAA,CAAAM,SAAA,eAAiE;QACrEN,EAAA,CAAAK,YAAA,EAAM;QACNL,EAAA,CAAAC,cAAA,aAAwB;QACbD,EAAA,CAAAI,MAAA,aAAM;QAAAJ,EAAA,CAAAK,YAAA,EAAQ;QACrBL,EAAA,CAAAM,SAAA,eAAoE;QACxEN,EAAA,CAAAK,YAAA,EAAM;QACNL,EAAA,CAAAC,cAAA,gBAA8C;QAAAD,EAAA,CAAAI,MAAA,aAAK;QAAAJ,EAAA,CAAAK,YAAA,EAAS;;;QAT1DL,EAAA,CAAAO,UAAA,cAAAR,GAAA,CAAAhB,SAAA,CAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}